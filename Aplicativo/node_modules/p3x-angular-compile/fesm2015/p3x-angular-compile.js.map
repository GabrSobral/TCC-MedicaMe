{"version":3,"file":"p3x-angular-compile.js","sources":["../../../projects/angular-compile/src/lib/angular-compile.component.ts","../../../projects/angular-compile/src/lib/angular-compile.module.ts","../../../projects/angular-compile/src/public-api.ts","../../../projects/angular-compile/src/p3x-angular-compile.ts"],"sourcesContent":["import {\n    Compiler,\n    Component,\n    Injectable,\n    Input,\n    ModuleWithProviders,\n    NgModule,\n    NgModuleFactory,\n    OnChanges,\n    SimpleChanges,\n    Type,\n} from '@angular/core';\n\nimport {CommonModule} from '@angular/common';\n//import { BrowserModule } from '@angular/platform-browser';\n//let SingletonDefaultModule: NgModule;\n//import cloneDeep from 'lodash/cloneDeep';\n\n//import { CorifeusMaterialModule } from 'corifeus-web-material';\n\nfunction reverse(str: string) {\n    return str.split('').reverse().join('')\n}\n\nfunction random() {\n    return (Math.floor(Math.random() * (99999999999999999 - 10000000000000000)) + 10000000000000000).toString(16)\n}\n\nlet currentIdTime: number;\nlet currentId = 0;\n\nfunction nextId(): string {\n\n    const now = Date.now();\n    if (currentIdTime !== now) {\n        currentId = 0;\n        currentIdTime = now\n    }\n    const comingId = ++currentId;\n    const randomHex = reverse(random()).padStart(15, '0');\n    const timeHex = reverse(currentIdTime.toString(16).padStart(12, '0'))\n    const comingIdHex = reverse(comingId.toString(16).padStart(3, '0'))\n    const newId: string = `p3x-angular-compile-${timeHex}${comingIdHex}${randomHex}`;\n    //console.log(newId)\n    return newId\n}\n\n\n//const cache : any = {};\n\n@Component({\n    selector: '[p3x-compile]',\n    template: `\n        <ng-container *ngIf=\"renderComponent\">\n            <ng-container *ngComponentOutlet=\"dynamicComponent; ngModuleFactory: dynamicModule;\"></ng-container>\n        </ng-container>\n    `\n})\n@Injectable()\nexport class CompileAttribute implements OnChanges {\n//export class CompileAttribute implements OnChanges ,OnInit {\n\n    @Input('p3x-compile')\n    html: string;\n\n    @Input('p3x-compile-ctx')\n    context: any;\n\n    @Input('p3x-compile-error-handler')\n    errorHandler: Function = undefined;\n\n    dynamicComponent: any;\n    dynamicModule: NgModuleFactory<any> | any;\n\n    @Input('p3x-compile-module')\n    module: NgModule;\n\n    @Input('p3x-compile-imports')\n    imports: Array<Type<any> | ModuleWithProviders<any> | any[]>;\n\n    constructor(\n        //  private container: ViewContainerRef,\n        // private service: CompileService\n        private compiler: Compiler,\n        // @Inject('config') private config:CompileServiceConfig\n    ) {\n    }\n\n    /*\n    // not requires, since ngOnChanges does it first time change\n    ngOnInit() {\n        //console.log('ng init')\n       // this.update();\n    }\n     */\n\n    get renderComponent() {\n        return typeof this.html === 'string' && this.html.trim() !== ''\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        //console.log('ng one changes')\n        this.update();\n    }\n\n\n    update() {\n        try {\n            if (this.html === undefined || this.html === null || this.html.trim() === '') {\n                //            this.container.clear();\n                this.dynamicComponent = undefined;\n                this.dynamicModule = undefined;\n                return;\n            }\n\n            /*\n\n            // looks like Angular already is caching\n\n            //console.log('html', this.html)\n            const cacheKey = this.html;\n            //console.log(Object.keys(cache).indexOf(cacheKey), cache)\n            if (cache.hasOwnProperty(cacheKey)) {\n                const currentCache = cache[cacheKey];\n                this.dynamicComponent = currentCache.dynamicComponent\n                this.dynamicModule = currentCache.dynamicModule\n                return ;\n            }\n            */\n            this.dynamicComponent = this.createNewComponent(this.html, this.context);\n            this.dynamicModule = this.compiler.compileModuleSync(this.createComponentModule(this.dynamicComponent));\n\n            /*\n            cache[cacheKey] = {\n                dynamicComponent: this.dynamicComponent,\n                dynamicModule: this.dynamicModule,\n            };\n            */\n        } catch (e) {\n            if (this.errorHandler === undefined) {\n                throw e;\n            } else {\n                this.errorHandler(e);\n            }\n        }\n        /*\n        // now we use it with ngComponentOutlet, since about angular 5\n        await this.service.compile({\n            template: this.html,\n            container: this.container,\n            context: this.context,\n            imports: this.imports,\n            module: this.module\n        })\n        */\n    }\n\n    private createComponentModule(componentType: any) {\n        let module: NgModule = {};\n\n        if (this.module !== undefined) {\n            module = Object.assign({}, this.module);\n        }\n        /*\n        else if (SingletonDefaultModule !== undefined && SingletonDefaultModule !== null) {\n            module = cloneDeep(SingletonDefaultModule);\n        }\n        */\n        module.imports = module.imports || [];\n        module.imports.push(CommonModule);\n        if (this.imports !== undefined) {\n            module.imports = module.imports.concat(this.imports)\n        }\n        if (module.declarations === undefined) {\n            module.declarations = [\n                componentType\n            ];\n        } else {\n            module.declarations.push(componentType);\n        }\n        module.entryComponents = [\n            componentType\n        ];\n\n        @NgModule(module)\n        class RuntimeComponentModule {\n        }\n\n        return RuntimeComponentModule;\n    }\n\n\n    private createNewComponent(html: string, context: any) {\n\n        const selector: string = nextId()\n\n        @Component({\n            selector: selector,\n            template: html\n        })\n        class DynamicComponent {\n            context: any = context;\n        }\n\n        return DynamicComponent;\n    }\n}\n","import {\n    NgModule,\n    //ModuleWithProviders,\n} from '@angular/core';\nimport {CompileAttribute} from \"./angular-compile.component\";\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [\n      CompileAttribute\n  ],\n  imports: [\n      CommonModule\n  ],\n  exports: [\n      CompileAttribute\n  ]\n})\nexport class CompileModule { }\n","/*\n * Public API Surface of angular-compile\n */\n\nexport * from './lib/angular-compile.module';\nexport * from './lib/angular-compile.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}